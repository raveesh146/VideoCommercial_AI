{"ast":null,"code":"var _jsxFileName = \"/Users/raveesh/Documents/Commercial_AI/frontend/src/components/ImageFetcher.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport PersonaForm from './PersonaForm';\nimport SearchBar from './SearchBar';\nimport ImageDisplay from './ImageDisplay';\nimport VideoGenerator from './VideoGenerator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageFetcher = () => {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [personaDescription, setPersonaDescription] = useState('');\n  const fetchImage = async query => {\n    try {\n      const response = await axios.get('http://localhost:5001/fetch-image', {\n        params: {\n          q: query\n        }\n      });\n      setImageUrl(response.data.url);\n    } catch (error) {\n      console.error('Error fetching image:', error);\n    }\n  };\n  const handlePersonaSubmit = personaData => {\n    const {\n      age,\n      skinColor,\n      traits,\n      voiceType\n    } = personaData;\n    const description = `${age} years old, ${skinColor}, ${traits}, voice type: ${voiceType}`;\n    setPersonaDescription(description);\n    fetchImage(description); // Automatically fetch image with the persona description\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PersonaForm, {\n      onSubmit: handlePersonaSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), personaDescription && /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: fetchImage,\n      initialQuery: personaDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(VideoGenerator, {\n      imageUrl: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageFetcher, \"cJP/hyNc1YQuxYbomo6CA4kVw4w=\");\n_c = ImageFetcher;\nexport default ImageFetcher;\nvar _c;\n$RefreshReg$(_c, \"ImageFetcher\");","map":{"version":3,"names":["React","useState","axios","PersonaForm","SearchBar","ImageDisplay","VideoGenerator","jsxDEV","_jsxDEV","ImageFetcher","_s","imageUrl","setImageUrl","personaDescription","setPersonaDescription","fetchImage","query","response","get","params","q","data","url","error","console","handlePersonaSubmit","personaData","age","skinColor","traits","voiceType","description","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","initialQuery","_c","$RefreshReg$"],"sources":["/Users/raveesh/Documents/Commercial_AI/frontend/src/components/ImageFetcher.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport PersonaForm from './PersonaForm';\nimport SearchBar from './SearchBar';\nimport ImageDisplay from './ImageDisplay';\nimport VideoGenerator from './VideoGenerator';\n\nconst ImageFetcher = () => {\n  const [imageUrl, setImageUrl] = useState('');\n  const [personaDescription, setPersonaDescription] = useState('');\n\n  const fetchImage = async (query) => {\n    try {\n      const response = await axios.get('http://localhost:5001/fetch-image', {\n        params: { q: query }\n      });\n      setImageUrl(response.data.url);\n    } catch (error) {\n      console.error('Error fetching image:', error);\n    }\n  };\n\n  const handlePersonaSubmit = (personaData) => {\n    const { age, skinColor, traits, voiceType } = personaData;\n    const description = `${age} years old, ${skinColor}, ${traits}, voice type: ${voiceType}`;\n    setPersonaDescription(description);\n    fetchImage(description); // Automatically fetch image with the persona description\n  };\n\n  return (\n    <div>\n      {/* Render PersonaForm first */}\n      <PersonaForm onSubmit={handlePersonaSubmit} />\n\n      {/* Render the SearchBar with the persona description (if needed) */}\n      {personaDescription && <SearchBar onSearch={fetchImage} initialQuery={personaDescription} />}\n\n      {/* Display the fetched image */}\n      <ImageDisplay imageUrl={imageUrl} />\n\n      {/* If there's an image, render the VideoGenerator */}\n      {imageUrl && <VideoGenerator imageUrl={imageUrl} />}\n    </div>\n  );\n};\n\nexport default ImageFetcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhE,MAAMc,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,mCAAmC,EAAE;QACpEC,MAAM,EAAE;UAAEC,CAAC,EAAEJ;QAAM;MACrB,CAAC,CAAC;MACFJ,WAAW,CAACK,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,MAAM;MAAEC,GAAG;MAAEC,SAAS;MAAEC,MAAM;MAAEC;IAAU,CAAC,GAAGJ,WAAW;IACzD,MAAMK,WAAW,GAAG,GAAGJ,GAAG,eAAeC,SAAS,KAAKC,MAAM,iBAAiBC,SAAS,EAAE;IACzFhB,qBAAqB,CAACiB,WAAW,CAAC;IAClChB,UAAU,CAACgB,WAAW,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBAEExB,OAAA,CAACL,WAAW;MAAC8B,QAAQ,EAAER;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG7CxB,kBAAkB,iBAAIL,OAAA,CAACJ,SAAS;MAACkC,QAAQ,EAAEvB,UAAW;MAACwB,YAAY,EAAE1B;IAAmB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG5F7B,OAAA,CAACH,YAAY;MAACM,QAAQ,EAAEA;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGnC1B,QAAQ,iBAAIH,OAAA,CAACF,cAAc;MAACK,QAAQ,EAAEA;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArCID,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}